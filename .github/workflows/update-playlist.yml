name: Update IPTV Playlist

on:
  schedule:
    # Run daily at 17:00 UTC (00:00 WIB / 12 malam Jakarta)
    - cron: '0 17 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      max_workers:
        description: 'Maximum concurrent workers'
        required: false
        default: '50'
        type: string
      timeout:
        description: 'Timeout per channel (seconds)'
        required: false
        default: '10'
        type: string

jobs:
  update-playlist:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run IPTV scraper and validator
      env:
        MAX_WORKERS: ${{ github.event.inputs.max_workers || '50' }}
        TIMEOUT: ${{ github.event.inputs.timeout || '10' }}
      run: |
        echo "🚀 Starting MSPlay IPTV update..."
        echo "⚙️ Max workers: $MAX_WORKERS"
        echo "⚙️ Timeout: $TIMEOUT seconds"
        
        # Update config if needed
        if [ "$MAX_WORKERS" != "50" ]; then
          sed -i "s/MAX_WORKERS: int = 50/MAX_WORKERS: int = $MAX_WORKERS/" src/config.py
        fi
        
        if [ "$TIMEOUT" != "10" ]; then
          sed -i "s/TIMEOUT: int = 10/TIMEOUT: int = $TIMEOUT/" src/config.py
        fi
        
        # Run the scraper
        python main.py
        
    - name: Generate README stats
      run: |
        echo "📊 Generating README statistics..."
        python scripts/update_readme_stats.py
        
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "✅ Changes detected"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No changes detected"
        fi
        
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Get current date for commit message
        CURRENT_DATE=$(date -u +"%Y-%m-%d %H:%M UTC")
        
        # Get channel count from stats
        CHANNEL_COUNT=$(python -c "
        import json
        try:
            with open('static/stats.json', 'r') as f:
                stats = json.load(f)
            print(stats['total_channels'])
        except:
            print('N/A')
        ")
        
        git add .
        git commit -m "🤖 Auto-update playlist - $CURRENT_DATE
        
        📊 Statistics:
        - Total channels: $CHANNEL_COUNT
        - Updated: $CURRENT_DATE
        - Workflow: ${{ github.workflow }}
        - Run: ${{ github.run_number }}"
        
        git push
        
    - name: Create release info
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        CURRENT_DATE=$(date -u +"%Y-%m-%d")
        CHANNEL_COUNT=$(python -c "
        import json
        try:
            with open('static/stats.json', 'r') as f:
                stats = json.load(f)
            print(stats['total_channels'])
        except:
            print('N/A')
        ")
        
        echo "📺 **MSPlay IPTV Update - $CURRENT_DATE**" > release_notes.md
        echo "" >> release_notes.md
        echo "🎯 **Statistics:**" >> release_notes.md
        echo "- 📊 Total Channels: **$CHANNEL_COUNT**" >> release_notes.md
        echo "- 🕐 Updated: $CURRENT_DATE" >> release_notes.md
        echo "- 🔄 Auto-generated by GitHub Actions" >> release_notes.md
        echo "" >> release_notes.md
        echo "📁 **Files:**" >> release_notes.md
        echo "- 📺 [msplay.m3u](https://raw.githubusercontent.com/${{ github.repository }}/main/static/msplay.m3u)" >> release_notes.md
        echo "- 📊 [stats.json](https://raw.githubusercontent.com/${{ github.repository }}/main/static/stats.json)" >> release_notes.md
        echo "" >> release_notes.md
        echo "🔗 **Direct Playlist URL:** https://raw.githubusercontent.com/${{ github.repository }}/main/static/msplay.m3u" >> release_notes.md
        
        cat release_notes.md
        
    - name: Upload logs as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: iptv-logs-${{ github.run_number }}
        path: |
          msplay.log
          static/stats.json
        retention-days: 7